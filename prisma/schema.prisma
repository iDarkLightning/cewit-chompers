// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  name             String
  email            String
  image            String
  sessions         Session[]
  oauthAccounts    OauthAccount[]
  ownedRestaurants Restaurant[]

  dietaryRestrictions Food[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model OauthAccount {
  providerName   String
  providerUserId String
  userId         String
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([providerName, providerUserId])
}

model Restaurant {
  id      String @id @default(cuid())
  name    String
  slug    String @unique
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String
  menu    Food[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Food {
  id       String @id @default(cuid())
  name     String
  imageKey String

  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String

  ingredients FoodOnIngredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model FoodOnIngredient {
  food         Food       @relation(fields: [foodId], references: [id])
  foodId       String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId String

  @@id([foodId, ingredientId])
}

model Ingredient {
  id   String @id @default(cuid())
  name String

  foods FoodOnIngredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
